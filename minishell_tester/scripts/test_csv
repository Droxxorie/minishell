#!/bin/bash

# Script pour tester seulement les tests extraits du CSV
MINISHELL_PATH="../minishell"

# Liste des fichiers de tests CSV
csv_test_lists=(
	"csv_syntax"
	"csv_builtins"
	"csv_pipes"
	"csv_redirects"
	"csv_variables"
	"csv_quotes"
	"csv_paths"
	"csv_misc"
)

# Run a specific CSV test if specified
if [[ $1 ]]; then
	if [[ $1 == csv_* ]]; then
		test_lists=($1)
	else
		test_lists=("csv_$1")
	fi
else
	test_lists=("${csv_test_lists[@]}")
fi

BOLD="\e[1m"
YELLOW="\033[0;33m"
GREY="\033[38;5;244m"
PURPLE="\033[0;35m"
BLUE="\033[0;36m"
RED="\e[0;31m"
END="\033[0m"

chmod 000 ./test_files/invalid_permission
mkdir ./outfiles
mkdir ./mini_outfiles
mkdir ./bash_outfiles

printf $RED
echo "üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•";
echo "                                                                                             ";
echo "   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà            ";
echo "  ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà        ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà         ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà           ";
echo "  ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà        ‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà            ";
echo "  ‚ñà‚ñà           ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà         ‚ñà‚ñà    ‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà           ";
echo "   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà          ‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà           ";
echo "                                                                                             ";
echo "üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•";
echo "                                                                                              ";

PROMPT=$(echo -e "\nexit\n" | $MINISHELL_PATH | head -n 1 | sed "s/\x1B\[[0-9;]\{1,\}[A-Za-z]//g" )
# Helper commands:
REMOVE_COLORS="sed s/\x1B\[[0-9;]\{1,\}[A-Za-z]//g"
REMOVE_EXIT="grep -v ^exit$"

total_tests=0
total_ok=0

for testfile in ${test_lists[*]}; do
	if [[ ! -f "$testfile" ]]; then
		echo "Test file $testfile not found, skipping..."
		continue
	fi

	printf $RED
	echo ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî $testfile

	i=0
	ok=0

	while read teste; do
		((i++))
		((total_tests++))

		rm -rf ./outfiles/*
		rm -rf ./mini_outfiles/*
		MINI_OUTPUT=$(echo -e "$teste" | $MINISHELL_PATH 2> /dev/null | $REMOVE_COLORS | grep -vF "$PROMPT" | $REMOVE_EXIT )
		MINI_OUTFILES=$(cp ./outfiles/* ./mini_outfiles &>/dev/null)
		MINI_EXIT_CODE=$(echo -e "$MINISHELL_PATH\n$teste\necho \$?\nexit\n" | bash 2> /dev/null | $REMOVE_COLORS | grep -vF "$PROMPT" | $REMOVE_EXIT | tail -n 1)
		MINI_ERROR_MSG=$(trap "" PIPE && echo "$teste" | $MINISHELL_PATH 2>&1 > /dev/null | grep -o '[^:]*$' )

		rm -rf ./outfiles/*
		rm -rf ./bash_outfiles/*
		BASH_OUTPUT=$(echo -e "$teste" | bash 2> /dev/null)
		BASH_EXIT_CODE=$(echo $?)
		BASH_OUTFILES=$(cp ./outfiles/* ./bash_outfiles &>/dev/null)
		BASH_ERROR_MSG=$(trap "" PIPE && echo "$teste" | bash 2>&1 > /dev/null | grep -o '[^:]*$' | head -n1)

		OUTFILES_DIFF=$(diff --brief ./mini_outfiles ./bash_outfiles)

		printf $YELLOW
		printf "Test %3s: " $i
		if [[ "$MINI_OUTPUT" == "$BASH_OUTPUT" && "$MINI_EXIT_CODE" == "$BASH_EXIT_CODE" && -z "$OUTFILES_DIFF" ]]; then
			printf ‚úÖ
			((ok++))
			((total_ok++))
			if [ "$MINI_ERROR_MSG" != "$BASH_ERROR_MSG" ]; then
				printf "‚ö†Ô∏è "
			fi
		else
			printf ‚ùå
		fi
		printf "$GREY $teste \n$END"
		if [ "$OUTFILES_DIFF" ]; then
			echo "$OUTFILES_DIFF"
			echo mini outfiles:
			cat ./mini_outfiles/*
			echo bash outfiles:
			cat ./bash_outfiles/*
		fi
		if [ "$MINI_OUTPUT" != "$BASH_OUTPUT" ]; then
			echo mini output = \($MINI_OUTPUT\)
			echo bash output = \($BASH_OUTPUT\)
		fi
		if [ "$MINI_EXIT_CODE" != "$BASH_EXIT_CODE" ]; then
			echo mini exit code = $MINI_EXIT_CODE
			echo bash exit code = $BASH_EXIT_CODE
		fi
		if [ "$MINI_ERROR_MSG" != "$BASH_ERROR_MSG" ]; then
			echo mini error = \($MINI_ERROR_MSG\)
			echo bash error = \($BASH_ERROR_MSG\)
		fi
	done < $testfile

	printf $BLUE
	printf "Results for $testfile: $ok/$i\n"
	printf $END
done

chmod 666 ./test_files/invalid_permission
rm -rf ./outfiles
rm -rf ./mini_outfiles
rm -rf ./bash_outfiles

printf $PURPLE
printf $BOLD
echo "TOTAL RESULTS: $total_ok/$total_tests"
printf $END

if [[ "$total_ok" == "$total_tests" ]]; then
	echo "üéä üéä üéä"
	echo "üòé üòé üòé"
	echo "üéâ üéâ üéâ"
	exit 0
else
	echo "üò≠ üò≠ üò≠"
	exit 1
fi
